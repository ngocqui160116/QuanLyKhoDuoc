@using Phoenix.Server.Services.Database;
@model Phoenix.Server.Web.Areas.Admin.Models.Inventory.InventoryModel
@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)
@section Scripts{
    <script type="text/javascript" src="~/assets/js/tabulator.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
}
@section Breadcrumb{
    <div class="-intro-x breadcrumb mr-auto hidden sm:flex">
        <span>Chương trình</span> <i data-feather="chevron-right" class="breadcrumb__icon"></i>
        <a href="#" class="breadcrumb--active">Quản lý kho</a><i data-feather="chevron-right" class="breadcrumb__icon"></i>
        <a href="#" class="breadcrumb--active">Tồn kho</a>
    </div>
}
@Html.AntiForgeryToken()
<div class="intro-y flex flex-col sm:flex-row items-center mt-8">
    <h2 class="text-lg font-medium mr-auto">
        Tồn kho
    </h2>
   @* <div class="w-full sm:w-auto flex mt-4 sm:mt-0">
        <a href="@Url.Action("Create","Medicine")" class="btn btn-primary text-white shadow-md mr-2">Thêm mới</a>
    </div>*@
</div>
@*<div class="grid gap-6 mt-5">
    <div class="intro-y box p-5">
        <div class="grid grid-cols-12 gap-2">
            <div class="col-span-12 lg:col-span-6">
                <label>Số lô</label>
                <input type="text" id="LotNumber" class="form-control">
            </div>
        </div>
        <div class="grid mt-3">
            <div class="w-full sm:w-auto flex mt-5 sm:mt-0 ml-auto">
                <button type="button" onclick="onResetSearch();" class="btn btn-danger text-white shadow-md mr-2">Xóa tìm kiếm</button>
                <button type="button" onclick="onSearch();" class="btn btn-warning text-white shadow-md mr-2">Tìm kiếm</button>
            </div>
        </div>
    </div>
</div>*@
<div class="intro-y box p-5 mt-5">
    <div id="main-grid"></div>
    <script>
        var dateFormatter = function (cell, formatterParams) {
            var value = cell.getValue();

            if (value) {
                value = moment(value).format("DD/MM/YYYY");
            }

            return value;
        }
        const priceFormatter = function (cell, formatterParams) {
            var value = cell.getValue();

            if (value) {
                value = value.toLocaleString("it-IT", { style: "currency", currency: "VND" });
            }
            return value;
        }
        var table = new Tabulator("#main-grid", {
            layout: "fitDataFill",
            ajaxURL: "@Html.Raw(Url.Action("List", "Inventory"))",
            ajaxConfig: "post",
            ajaxRequesting: function (url, params) {
                params.LotNumber = $('#LotNumber').val();
            },
            ajaxResponse: function (url, params, response) {
                return response;
            },
            ajaxFiltering: true,
            paginationSize: 10,
            paginationSizeSelector: [10, 25, 50, 100],
            pagination: "remote",
            paginationDataSent: {
                "size": "pageSize",
                "page": "page",
            },
            paginationDataReceived: {
                "data": "Data",
                "last_page": "Total"
            },
            placeholder: "Chưa có dữ liệu",
            @*var formatter = new Intl.NumberFormat('it-IT', {
                style: 'currency',
                currency: 'VND',
            }),*@
            columns: [
                { title: "Tên thuốc", field: "MedicineName", sorter: "string", width: 280 },
                { title: "Số lượng tồn", field: "Count", sorter: "string", width: 200 },
                { title: "Số lô", field: "LotNumber", sorter: "string", width: 200 },
                {
                    title: "Hạn sử dụng", field: "HSD", sorter: "date", width: 180, formatter: dateFormatter
                },
                //{ title: "Giá", field: "UnitPrice", sorter: "string", width: 200, formatter.format(UnitPrice) },

                @*{
                    title: "Ngày tạo", field: "CreatedAt", sorter: "date", width: 180, formatter: dateFormatter
                },
                {
                    title: "Ngày cập nhật", field: "UpdatedAt", sorter: "date", width: 180, formatter: dateFormatter
                },*@
            ],
        });
        let onSearch = (e) => {
            table.setData();
        }
        let onResetSearch = (e) => {
            $('#LotNumber').val('');
            table.setData();
        }
    </script>
</div>

